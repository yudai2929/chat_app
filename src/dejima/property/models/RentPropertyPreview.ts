/* tslint:disable */
/* eslint-disable */
/**
 * ES 物件API
 * （株）いい生活 が提供予定の 物件情報API のインターフェイス仕様書  いい物件Oneに登録した賃貸物件情報を参照する物件参照API仕様について定める。  ※1: 開発中のため、実際のリリース時の仕様は異なる場合がございます。  ※2: 売買物件に関する仕様に関してはα版であり、今後大きな仕様の見直しを行う可能性がございます。  ## リソース仕様  ### 通信仕様  HTTP/2 および HTTP/1.1 をサポートする。通信はTLSで暗号化されたHTTPSのみを許可する。  ### リクエストヘッダ  リクエストヘッダには以下の指定を必須とする。  | No. | リクエストヘッダのフィールド名 | 指定値 | |:---:|:-------------------------------|:-------| | 1 | Accept | application/json | | 2 | X-Api-Key | 弊社が指定するキー。ご利用のお客様を特定するためのもの。 |  Acceptヘッダには、常にapplication/json を指定する。 これにより、レスポンスがJSONであることを指示する。  ### データフォーマットと文字コード  データフォーマットはJSON、文字コードはUTF-8とする。  ### データ型  通常のJSONの型以外に擬似型としていくつかのデータ型を用意している。 これは、JSON標準では表現しきれないデータや、不動産特有のデータを扱うために定義したもので使用する。 また、ここに記載の無いデータ型については、 OpenAPI Specification (Version 3.0.2) の DataTypes に準拠する。  * [DataTypes](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types)   | No. | 型 | 説明 | |:---:|:---|:-----| | 1 | string | JSON標準の文字列 | | 2 | int | JSON標準の整数 | | 3 | float | JSON標準の浮動小数点数 | | 4 | bool | JSON標準の真偽値 | | 5 | datetime | ISO8611フォーマットの日付時刻を表す文字列。YYYY-MM-DDTHH:MM:SS。 <br> 例: 2015-08-26T19:16:03 = 2015年8月26日19時16分03秒 | | 6 | date | ISO8611フォーマットの日付を表す文字列。YYYY-MM-DD。 <br> 例: 2015-08-26 = 2015年8月26日 | | 7 | datejun | 後述 |  #### datejun型  いい生活独自の日付と旬を表すフォーマット。YYYYMMJDD。  * YYYY: 西暦年 * MM: 月。01～12。ただし00とすることにより、年単位までの精度の数字を表現可能。 * J: 旬。1=上旬、2=中旬、3=下旬。 0とすることで月単位までの精度の数字を表現可能。 * DD: 日。01～31。ただし00とすることにより、旬単位までの精度の数字を表現可能。日単位の精度の場合、1～10日までは旬を1、11～20日までは旬を2、21日以降は旬を3と指定する必要がある。 * 例:     * 201900000 = 2019年     * 201901000 = 2019年1月     * 201903100 = 2019年3月上旬     * 201912300 = 2019年12月下旬     * 201906105 = 2019年6月5日     * 201908216 = 2019年8月16日  ## 検索パラメータ  ### OR 検索  パラメータタイプが `array` のキーについては、クエリパラメータで複数指定を行った場合、 指定された値のいずれかに一致する対象を検索する（ OR 検索）。  ex) `?layout_type_code=1&layout_type_code=2`  ### ソート順  `*.order` という名前のパラメータでソート順を指定可能。ascを指定したとき昇順、descを指定したとき降順となる。  ex) `?price.order=desc`  基本的にソート順は一つだけ指定する。
 *
 * The version of the OpenAPI document: 6.1.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  AreaWithMeasurementMethod,
  AreaWithMeasurementMethodFromJSON,
  AreaWithMeasurementMethodFromJSONTyped,
  AreaWithMeasurementMethodToJSON,
  BuildingPreview,
  BuildingPreviewFromJSON,
  BuildingPreviewFromJSONTyped,
  BuildingPreviewToJSON,
  DateJun,
  DateJunFromJSON,
  DateJunFromJSONTyped,
  DateJunToJSON,
  Deposit,
  DepositFromJSON,
  DepositFromJSONTyped,
  DepositToJSON,
  Insurance,
  InsuranceFromJSON,
  InsuranceFromJSONTyped,
  InsuranceToJSON,
  IntRange,
  IntRangeFromJSON,
  IntRangeFromJSONTyped,
  IntRangeToJSON,
  Price,
  PriceFromJSON,
  PriceFromJSONTyped,
  PriceToJSON,
  PriceWithUnit,
  PriceWithUnitFromJSON,
  PriceWithUnitFromJSONTyped,
  PriceWithUnitToJSON,
  RentPickupFeature,
  RentPickupFeatureFromJSON,
  RentPickupFeatureFromJSONTyped,
  RentPickupFeatureToJSON,
  Transportation,
  TransportationFromJSON,
  TransportationFromJSONTyped,
  TransportationToJSON,
} from './';

/**
 * 賃貸物件概要（区画住戸別表示）
 * @export
 * @interface RentPropertyPreview
 */
export interface RentPropertyPreview {
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  propertyFullKey: string;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly propertyClass?: string;
  /**
   * 1: 土地<br/>2: 建物<br/>3: 区画<br/>4: 建物付帯設備
   * @type {number}
   * @memberof RentPropertyPreview
   */
  readonly propertyClassCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly propertyUse?: string;
  /**
   * 1: 居住用<br/>2: 事業用<br/>3: 投資用
   * @type {number}
   * @memberof RentPropertyPreview
   */
  readonly propertyUseCode: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly propertyType?: string;
  /**
   * 101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
   * @type {number}
   * @memberof RentPropertyPreview
   */
  propertyTypeCode: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  roomNumberText?: string;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  readonly isPublished?: boolean;
  /**
   *
   * @type {Date}
   * @memberof RentPropertyPreview
   */
  readonly publishedDatetime?: Date;
  /**
   *
   * @type {Date}
   * @memberof RentPropertyPreview
   */
  readonly lastUpdateDatetime?: Date;
  /**
   *
   * @type {Date}
   * @memberof RentPropertyPreview
   */
  readonly nextRenewalDatetime?: Date;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  hasEntries?: boolean;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly currentStatus?: string;
  /**
   * 1: 居住中<br/>2: 空室<br/>3: 建築中<br/>4: 退去予定<br/>5: 改装中<br/>6: 完成済
   * @type {number}
   * @memberof RentPropertyPreview
   */
  currentStatusCode?: number;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  nameDisplayFlag: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  roomNumberDisplayFlag: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  branchNumberDisplayFlag: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  mapMarkerDisplayFlag: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  panoramaFlag: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  houseWithOfficeFlag?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  houseWithShopsFlag?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  itJusetsuFlag?: boolean;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly gas?: string;
  /**
   * 1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
   * @type {number}
   * @memberof RentPropertyPreview
   */
  gasCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly rentTransactionForm?: string;
  /**
   * 1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
   * @type {number}
   * @memberof RentPropertyPreview
   */
  rentTransactionFormCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly residenceRentPeriod?: string;
  /**
   *
   * @type {number}
   * @memberof RentPropertyPreview
   */
  residenceRentPeriodCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly newUsed?: string;
  /**
   *
   * @type {number}
   * @memberof RentPropertyPreview
   */
  newUsedCode?: number;
  /**
   * 現貸料
   * @type {Price}
   * @memberof RentPropertyPreview
   */
  price: Price;
  /**
   *
   * @type {number}
   * @memberof RentPropertyPreview
   */
  pricePerTsubo?: number;
  /**
   *
   * @type {Date}
   * @memberof RentPropertyPreview
   */
  priceUpdateDate?: Date;
  /**
   * 雑費
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  miscExpense?: PriceWithUnit;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  hasInsurance?: boolean;
  /**
   *
   * @type {Insurance}
   * @memberof RentPropertyPreview
   */
  insurance?: Insurance;
  /**
   * 礼金
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  keyMoney?: PriceWithUnit;
  /**
   *
   * @type {Deposit}
   * @memberof RentPropertyPreview
   */
  deposit?: Deposit;
  /**
   * 敷引金
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  repairCost?: PriceWithUnit;
  /**
   * 保証金
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  guaranteePrice?: PriceWithUnit;
  /**
   * 償却金
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  amortizationExpense?: PriceWithUnit;
  /**
   * 権利金
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  premium?: PriceWithUnit;
  /**
   * 管理費
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  manageCost?: PriceWithUnit;
  /**
   * 共益費
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  serviceFee?: PriceWithUnit;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  isTokuyuchin?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  initialCostCreditCardAvailableFlag?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  monthlyCostCreditCardAvailableFlag?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  readonly otherInitialCostFreeFlag: boolean;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  manageCostFree?: string;
  /**
   * 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
   * @type {number}
   * @memberof RentPropertyPreview
   */
  manageCostFreeCode: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  serviceFeeFree?: string;
  /**
   * 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
   * @type {number}
   * @memberof RentPropertyPreview
   */
  serviceFeeFreeCode: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  miscExpenseFree?: string;
  /**
   * 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
   * @type {number}
   * @memberof RentPropertyPreview
   */
  miscExpenseFreeCode: number;
  /**
   * 非推奨のため代わりにguarantor_requirements_codeを使うこと。
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  noGuarantorFlag?: boolean;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly guarantorRequirements?: string;
  /**
   * 1: 要<br/>2: 不要<br/>3: 未入力
   * @type {number}
   * @memberof RentPropertyPreview
   */
  guarantorRequirementsCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly initialCost?: string;
  /**
   * 1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
   * @type {number}
   * @memberof RentPropertyPreview
   */
  initialCostCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly studentRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
   * @type {number}
   * @memberof RentPropertyPreview
   */
  studentRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly genderRestriction?: string;
  /**
   * 1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
   * @type {number}
   * @memberof RentPropertyPreview
   */
  genderRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly kidsRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  kidsRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly onePersonRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
   * @type {number}
   * @memberof RentPropertyPreview
   */
  onePersonRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly twoPersonsRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
   * @type {number}
   * @memberof RentPropertyPreview
   */
  twoPersonsRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly elderRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
   * @type {number}
   * @memberof RentPropertyPreview
   */
  elderRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly corporateContractRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
   * @type {number}
   * @memberof RentPropertyPreview
   */
  corporateContractRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly petRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  petRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly officeUsageRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  officeUsageRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  musicalInstrumentRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  musicalInstrumentRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly restaurantUsageRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  restaurantUsageRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly roomSharingRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  roomSharingRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly foreignerRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  foreignerRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly friendsRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  friendsRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly foreignStudentRestriction?: string;
  /**
   * 1: 不可<br/>2: 可<br/>3: 相談
   * @type {number}
   * @memberof RentPropertyPreview
   */
  foreignStudentRestrictionCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly depositForStudent?: string;
  /**
   * 1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
   * @type {number}
   * @memberof RentPropertyPreview
   */
  depositForStudentCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly dwellingUnitUse?: string;
  /**
   * 1: 住居<br/>2: 店舗<br/>3: 事務所<br/>4: 駐車場<br/>5: 駐輪場<br/>6: バイク置場<br/>7: 倉庫<br/>8: トランクルーム
   * @type {number}
   * @memberof RentPropertyPreview
   */
  dwellingUnitUseCode?: number;
  /**
   *
   * @type {number}
   * @memberof RentPropertyPreview
   */
  roomCount?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly layoutType?: string;
  /**
   * 1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
   * @type {number}
   * @memberof RentPropertyPreview
   */
  layoutTypeCode?: number;
  /**
   * `room_count` と `layout_type` を組み合わせて、一般的な間取りの文字列表現を返す。         ex) 1DK, 2LDK
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly layoutText?: string;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly orientation?: string;
  /**
   * 1: 東<br/>2: 西<br/>3: 南<br/>4: 北<br/>5: 北東<br/>6: 北西<br/>7: 南東<br/>8: 南西
   * @type {number}
   * @memberof RentPropertyPreview
   */
  orientationCode?: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  floorNumber?: string;
  /**
   * 専有面積 単位: 平方メートル 計測方法: 壁芯 内法 登記簿
   * @type {AreaWithMeasurementMethod}
   * @memberof RentPropertyPreview
   */
  exclusiveArea?: AreaWithMeasurementMethod;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly available?: string;
  /**
   * 1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
   * @type {number}
   * @memberof RentPropertyPreview
   */
  availableCode?: number;
  /**
   * 入居可能日／引渡可能日
   * @type {DateJun}
   * @memberof RentPropertyPreview
   */
  availableDatejun?: DateJun;
  /**
   *
   * @type {Date}
   * @memberof RentPropertyPreview
   */
  departureDate?: Date;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  salesPoint?: string;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  messageToOtherCompany?: string;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  originalPropertyCodeText?: string;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  advertiseFlag?: boolean;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  companyRemark?: string;
  /**
   * 広告料
   * @type {PriceWithUnit}
   * @memberof RentPropertyPreview
   */
  advertisingFee?: PriceWithUnit;
  /**
   * 広告料更新日
   * @type {Date}
   * @memberof RentPropertyPreview
   */
  advertisingFeeUpdateDate?: Date;
  /**
   *
   * @type {number}
   * @memberof RentPropertyPreview
   */
  customerKey: number;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  agentGuid: string;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  staffGuid?: string;
  /**
   *
   * @type {Array<Transportation>}
   * @memberof RentPropertyPreview
   */
  transportation: Array<Transportation>;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  readonly parkingAvailability?: string;
  /**
   * 1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
   * @type {number}
   * @memberof RentPropertyPreview
   */
  parkingAvailabilityCode?: number;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  hasBikeParking?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  hasMotorbikeParking?: boolean;
  /**
   *
   * @type {IntRange}
   * @memberof RentPropertyPreview
   */
  parkingPriceRange?: IntRange;
  /**
   *
   * @type {boolean}
   * @memberof RentPropertyPreview
   */
  b2bCustomFlag?: boolean;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  b2bFreeComment?: string;
  /**
   *
   * @type {string}
   * @memberof RentPropertyPreview
   */
  b2bRemark?: string;
  /**
   *
   * @type {number}
   * @memberof RentPropertyPreview
   */
  searchArea?: number;
  /**
   *
   * @type {RentPickupFeature}
   * @memberof RentPropertyPreview
   */
  pickupFeature?: RentPickupFeature;
  /**
   *
   * @type {BuildingPreview}
   * @memberof RentPropertyPreview
   */
  buildingPreview?: BuildingPreview;
}

export function RentPropertyPreviewFromJSON(json: any): RentPropertyPreview {
  return RentPropertyPreviewFromJSONTyped(json, false);
}

export function RentPropertyPreviewFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): RentPropertyPreview {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    propertyFullKey: json['property_full_key'],
    propertyClass: !exists(json, 'property_class')
      ? undefined
      : json['property_class'],
    propertyClassCode: !exists(json, 'property_class_code')
      ? undefined
      : json['property_class_code'],
    propertyUse: !exists(json, 'property_use')
      ? undefined
      : json['property_use'],
    propertyUseCode: json['property_use_code'],
    propertyType: !exists(json, 'property_type')
      ? undefined
      : json['property_type'],
    propertyTypeCode: json['property_type_code'],
    roomNumberText: !exists(json, 'room_number_text')
      ? undefined
      : json['room_number_text'],
    isPublished: !exists(json, 'is_published')
      ? undefined
      : json['is_published'],
    publishedDatetime: !exists(json, 'published_datetime')
      ? undefined
      : new Date(json['published_datetime']),
    lastUpdateDatetime: !exists(json, 'last_update_datetime')
      ? undefined
      : new Date(json['last_update_datetime']),
    nextRenewalDatetime: !exists(json, 'next_renewal_datetime')
      ? undefined
      : new Date(json['next_renewal_datetime']),
    hasEntries: !exists(json, 'has_entries') ? undefined : json['has_entries'],
    currentStatus: !exists(json, 'current_status')
      ? undefined
      : json['current_status'],
    currentStatusCode: !exists(json, 'current_status_code')
      ? undefined
      : json['current_status_code'],
    nameDisplayFlag: json['name_display_flag'],
    roomNumberDisplayFlag: json['room_number_display_flag'],
    branchNumberDisplayFlag: json['branch_number_display_flag'],
    mapMarkerDisplayFlag: json['map_marker_display_flag'],
    panoramaFlag: json['panorama_flag'],
    houseWithOfficeFlag: !exists(json, 'house_with_office_flag')
      ? undefined
      : json['house_with_office_flag'],
    houseWithShopsFlag: !exists(json, 'house_with_shops_flag')
      ? undefined
      : json['house_with_shops_flag'],
    itJusetsuFlag: !exists(json, 'it_jusetsu_flag')
      ? undefined
      : json['it_jusetsu_flag'],
    gas: !exists(json, 'gas') ? undefined : json['gas'],
    gasCode: !exists(json, 'gas_code') ? undefined : json['gas_code'],
    rentTransactionForm: !exists(json, 'rent_transaction_form')
      ? undefined
      : json['rent_transaction_form'],
    rentTransactionFormCode: !exists(json, 'rent_transaction_form_code')
      ? undefined
      : json['rent_transaction_form_code'],
    residenceRentPeriod: !exists(json, 'residence_rent_period')
      ? undefined
      : json['residence_rent_period'],
    residenceRentPeriodCode: !exists(json, 'residence_rent_period_code')
      ? undefined
      : json['residence_rent_period_code'],
    newUsed: !exists(json, 'new_used') ? undefined : json['new_used'],
    newUsedCode: !exists(json, 'new_used_code')
      ? undefined
      : json['new_used_code'],
    price: PriceFromJSON(json['price']),
    pricePerTsubo: !exists(json, 'price_per_tsubo')
      ? undefined
      : json['price_per_tsubo'],
    priceUpdateDate: !exists(json, 'price_update_date')
      ? undefined
      : new Date(json['price_update_date']),
    miscExpense: !exists(json, 'misc_expense')
      ? undefined
      : PriceWithUnitFromJSON(json['misc_expense']),
    hasInsurance: !exists(json, 'has_insurance')
      ? undefined
      : json['has_insurance'],
    insurance: !exists(json, 'insurance')
      ? undefined
      : InsuranceFromJSON(json['insurance']),
    keyMoney: !exists(json, 'key_money')
      ? undefined
      : PriceWithUnitFromJSON(json['key_money']),
    deposit: !exists(json, 'deposit')
      ? undefined
      : DepositFromJSON(json['deposit']),
    repairCost: !exists(json, 'repair_cost')
      ? undefined
      : PriceWithUnitFromJSON(json['repair_cost']),
    guaranteePrice: !exists(json, 'guarantee_price')
      ? undefined
      : PriceWithUnitFromJSON(json['guarantee_price']),
    amortizationExpense: !exists(json, 'amortization_expense')
      ? undefined
      : PriceWithUnitFromJSON(json['amortization_expense']),
    premium: !exists(json, 'premium')
      ? undefined
      : PriceWithUnitFromJSON(json['premium']),
    manageCost: !exists(json, 'manage_cost')
      ? undefined
      : PriceWithUnitFromJSON(json['manage_cost']),
    serviceFee: !exists(json, 'service_fee')
      ? undefined
      : PriceWithUnitFromJSON(json['service_fee']),
    isTokuyuchin: !exists(json, 'is_tokuyuchin')
      ? undefined
      : json['is_tokuyuchin'],
    initialCostCreditCardAvailableFlag: !exists(
      json,
      'initial_cost_credit_card_available_flag'
    )
      ? undefined
      : json['initial_cost_credit_card_available_flag'],
    monthlyCostCreditCardAvailableFlag: !exists(
      json,
      'monthly_cost_credit_card_available_flag'
    )
      ? undefined
      : json['monthly_cost_credit_card_available_flag'],
    otherInitialCostFreeFlag: json['other_initial_cost_free_flag'],
    manageCostFree: !exists(json, 'manage_cost_free')
      ? undefined
      : json['manage_cost_free'],
    manageCostFreeCode: json['manage_cost_free_code'],
    serviceFeeFree: !exists(json, 'service_fee_free')
      ? undefined
      : json['service_fee_free'],
    serviceFeeFreeCode: json['service_fee_free_code'],
    miscExpenseFree: !exists(json, 'misc_expense_free')
      ? undefined
      : json['misc_expense_free'],
    miscExpenseFreeCode: json['misc_expense_free_code'],
    noGuarantorFlag: !exists(json, 'no_guarantor_flag')
      ? undefined
      : json['no_guarantor_flag'],
    guarantorRequirements: !exists(json, 'guarantor_requirements')
      ? undefined
      : json['guarantor_requirements'],
    guarantorRequirementsCode: !exists(json, 'guarantor_requirements_code')
      ? undefined
      : json['guarantor_requirements_code'],
    initialCost: !exists(json, 'initial_cost')
      ? undefined
      : json['initial_cost'],
    initialCostCode: !exists(json, 'initial_cost_code')
      ? undefined
      : json['initial_cost_code'],
    studentRestriction: !exists(json, 'student_restriction')
      ? undefined
      : json['student_restriction'],
    studentRestrictionCode: !exists(json, 'student_restriction_code')
      ? undefined
      : json['student_restriction_code'],
    genderRestriction: !exists(json, 'gender_restriction')
      ? undefined
      : json['gender_restriction'],
    genderRestrictionCode: !exists(json, 'gender_restriction_code')
      ? undefined
      : json['gender_restriction_code'],
    kidsRestriction: !exists(json, 'kids_restriction')
      ? undefined
      : json['kids_restriction'],
    kidsRestrictionCode: !exists(json, 'kids_restriction_code')
      ? undefined
      : json['kids_restriction_code'],
    onePersonRestriction: !exists(json, 'one_person_restriction')
      ? undefined
      : json['one_person_restriction'],
    onePersonRestrictionCode: !exists(json, 'one_person_restriction_code')
      ? undefined
      : json['one_person_restriction_code'],
    twoPersonsRestriction: !exists(json, 'two_persons_restriction')
      ? undefined
      : json['two_persons_restriction'],
    twoPersonsRestrictionCode: !exists(json, 'two_persons_restriction_code')
      ? undefined
      : json['two_persons_restriction_code'],
    elderRestriction: !exists(json, 'elder_restriction')
      ? undefined
      : json['elder_restriction'],
    elderRestrictionCode: !exists(json, 'elder_restriction_code')
      ? undefined
      : json['elder_restriction_code'],
    corporateContractRestriction: !exists(
      json,
      'corporate_contract_restriction'
    )
      ? undefined
      : json['corporate_contract_restriction'],
    corporateContractRestrictionCode: !exists(
      json,
      'corporate_contract_restriction_code'
    )
      ? undefined
      : json['corporate_contract_restriction_code'],
    petRestriction: !exists(json, 'pet_restriction')
      ? undefined
      : json['pet_restriction'],
    petRestrictionCode: !exists(json, 'pet_restriction_code')
      ? undefined
      : json['pet_restriction_code'],
    officeUsageRestriction: !exists(json, 'office_usage_restriction')
      ? undefined
      : json['office_usage_restriction'],
    officeUsageRestrictionCode: !exists(json, 'office_usage_restriction_code')
      ? undefined
      : json['office_usage_restriction_code'],
    musicalInstrumentRestriction: !exists(
      json,
      'musical_instrument_restriction'
    )
      ? undefined
      : json['musical_instrument_restriction'],
    musicalInstrumentRestrictionCode: !exists(
      json,
      'musical_instrument_restriction_code'
    )
      ? undefined
      : json['musical_instrument_restriction_code'],
    restaurantUsageRestriction: !exists(json, 'restaurant_usage_restriction')
      ? undefined
      : json['restaurant_usage_restriction'],
    restaurantUsageRestrictionCode: !exists(
      json,
      'restaurant_usage_restriction_code'
    )
      ? undefined
      : json['restaurant_usage_restriction_code'],
    roomSharingRestriction: !exists(json, 'room_sharing_restriction')
      ? undefined
      : json['room_sharing_restriction'],
    roomSharingRestrictionCode: !exists(json, 'room_sharing_restriction_code')
      ? undefined
      : json['room_sharing_restriction_code'],
    foreignerRestriction: !exists(json, 'foreigner_restriction')
      ? undefined
      : json['foreigner_restriction'],
    foreignerRestrictionCode: !exists(json, 'foreigner_restriction_code')
      ? undefined
      : json['foreigner_restriction_code'],
    friendsRestriction: !exists(json, 'friends_restriction')
      ? undefined
      : json['friends_restriction'],
    friendsRestrictionCode: !exists(json, 'friends_restriction_code')
      ? undefined
      : json['friends_restriction_code'],
    foreignStudentRestriction: !exists(json, 'foreign_student_restriction')
      ? undefined
      : json['foreign_student_restriction'],
    foreignStudentRestrictionCode: !exists(
      json,
      'foreign_student_restriction_code'
    )
      ? undefined
      : json['foreign_student_restriction_code'],
    depositForStudent: !exists(json, 'deposit_for_student')
      ? undefined
      : json['deposit_for_student'],
    depositForStudentCode: !exists(json, 'deposit_for_student_code')
      ? undefined
      : json['deposit_for_student_code'],
    dwellingUnitUse: !exists(json, 'dwelling_unit_use')
      ? undefined
      : json['dwelling_unit_use'],
    dwellingUnitUseCode: !exists(json, 'dwelling_unit_use_code')
      ? undefined
      : json['dwelling_unit_use_code'],
    roomCount: !exists(json, 'room_count') ? undefined : json['room_count'],
    layoutType: !exists(json, 'layout_type') ? undefined : json['layout_type'],
    layoutTypeCode: !exists(json, 'layout_type_code')
      ? undefined
      : json['layout_type_code'],
    layoutText: !exists(json, 'layout_text') ? undefined : json['layout_text'],
    orientation: !exists(json, 'orientation') ? undefined : json['orientation'],
    orientationCode: !exists(json, 'orientation_code')
      ? undefined
      : json['orientation_code'],
    floorNumber: !exists(json, 'floor_number')
      ? undefined
      : json['floor_number'],
    exclusiveArea: !exists(json, 'exclusive_area')
      ? undefined
      : AreaWithMeasurementMethodFromJSON(json['exclusive_area']),
    available: !exists(json, 'available') ? undefined : json['available'],
    availableCode: !exists(json, 'available_code')
      ? undefined
      : json['available_code'],
    availableDatejun: !exists(json, 'available_datejun')
      ? undefined
      : DateJunFromJSON(json['available_datejun']),
    departureDate: !exists(json, 'departure_date')
      ? undefined
      : new Date(json['departure_date']),
    salesPoint: !exists(json, 'sales_point') ? undefined : json['sales_point'],
    messageToOtherCompany: !exists(json, 'message_to_other_company')
      ? undefined
      : json['message_to_other_company'],
    originalPropertyCodeText: !exists(json, 'original_property_code_text')
      ? undefined
      : json['original_property_code_text'],
    advertiseFlag: !exists(json, 'advertise_flag')
      ? undefined
      : json['advertise_flag'],
    companyRemark: !exists(json, 'company_remark')
      ? undefined
      : json['company_remark'],
    advertisingFee: !exists(json, 'advertising_fee')
      ? undefined
      : PriceWithUnitFromJSON(json['advertising_fee']),
    advertisingFeeUpdateDate: !exists(json, 'advertising_fee_update_date')
      ? undefined
      : new Date(json['advertising_fee_update_date']),
    customerKey: json['customer_key'],
    agentGuid: json['agent_guid'],
    staffGuid: !exists(json, 'staff_guid') ? undefined : json['staff_guid'],
    transportation: (json['transportation'] as Array<any>).map(
      TransportationFromJSON
    ),
    parkingAvailability: !exists(json, 'parking_availability')
      ? undefined
      : json['parking_availability'],
    parkingAvailabilityCode: !exists(json, 'parking_availability_code')
      ? undefined
      : json['parking_availability_code'],
    hasBikeParking: !exists(json, 'has_bike_parking')
      ? undefined
      : json['has_bike_parking'],
    hasMotorbikeParking: !exists(json, 'has_motorbike_parking')
      ? undefined
      : json['has_motorbike_parking'],
    parkingPriceRange: !exists(json, 'parking_price_range')
      ? undefined
      : IntRangeFromJSON(json['parking_price_range']),
    b2bCustomFlag: !exists(json, 'b2b_custom_flag')
      ? undefined
      : json['b2b_custom_flag'],
    b2bFreeComment: !exists(json, 'b2b_free_comment')
      ? undefined
      : json['b2b_free_comment'],
    b2bRemark: !exists(json, 'b2b_remark') ? undefined : json['b2b_remark'],
    searchArea: !exists(json, 'search_area') ? undefined : json['search_area'],
    pickupFeature: !exists(json, 'pickup_feature')
      ? undefined
      : RentPickupFeatureFromJSON(json['pickup_feature']),
    buildingPreview: !exists(json, 'building_preview')
      ? undefined
      : BuildingPreviewFromJSON(json['building_preview']),
  };
}

export function RentPropertyPreviewToJSON(
  value?: RentPropertyPreview | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    property_full_key: value.propertyFullKey,
    property_type_code: value.propertyTypeCode,
    room_number_text: value.roomNumberText,
    has_entries: value.hasEntries,
    current_status_code: value.currentStatusCode,
    name_display_flag: value.nameDisplayFlag,
    room_number_display_flag: value.roomNumberDisplayFlag,
    branch_number_display_flag: value.branchNumberDisplayFlag,
    map_marker_display_flag: value.mapMarkerDisplayFlag,
    panorama_flag: value.panoramaFlag,
    house_with_office_flag: value.houseWithOfficeFlag,
    house_with_shops_flag: value.houseWithShopsFlag,
    it_jusetsu_flag: value.itJusetsuFlag,
    gas_code: value.gasCode,
    rent_transaction_form_code: value.rentTransactionFormCode,
    residence_rent_period_code: value.residenceRentPeriodCode,
    new_used_code: value.newUsedCode,
    price: PriceToJSON(value.price),
    price_per_tsubo: value.pricePerTsubo,
    price_update_date:
      value.priceUpdateDate === undefined
        ? undefined
        : value.priceUpdateDate.toISOString(),
    misc_expense: PriceWithUnitToJSON(value.miscExpense),
    has_insurance: value.hasInsurance,
    insurance: InsuranceToJSON(value.insurance),
    key_money: PriceWithUnitToJSON(value.keyMoney),
    deposit: DepositToJSON(value.deposit),
    repair_cost: PriceWithUnitToJSON(value.repairCost),
    guarantee_price: PriceWithUnitToJSON(value.guaranteePrice),
    amortization_expense: PriceWithUnitToJSON(value.amortizationExpense),
    premium: PriceWithUnitToJSON(value.premium),
    manage_cost: PriceWithUnitToJSON(value.manageCost),
    service_fee: PriceWithUnitToJSON(value.serviceFee),
    is_tokuyuchin: value.isTokuyuchin,
    initial_cost_credit_card_available_flag:
      value.initialCostCreditCardAvailableFlag,
    monthly_cost_credit_card_available_flag:
      value.monthlyCostCreditCardAvailableFlag,
    manage_cost_free: value.manageCostFree,
    manage_cost_free_code: value.manageCostFreeCode,
    service_fee_free: value.serviceFeeFree,
    service_fee_free_code: value.serviceFeeFreeCode,
    misc_expense_free: value.miscExpenseFree,
    misc_expense_free_code: value.miscExpenseFreeCode,
    no_guarantor_flag: value.noGuarantorFlag,
    guarantor_requirements_code: value.guarantorRequirementsCode,
    initial_cost_code: value.initialCostCode,
    student_restriction_code: value.studentRestrictionCode,
    gender_restriction_code: value.genderRestrictionCode,
    kids_restriction_code: value.kidsRestrictionCode,
    one_person_restriction_code: value.onePersonRestrictionCode,
    two_persons_restriction_code: value.twoPersonsRestrictionCode,
    elder_restriction_code: value.elderRestrictionCode,
    corporate_contract_restriction_code: value.corporateContractRestrictionCode,
    pet_restriction_code: value.petRestrictionCode,
    office_usage_restriction_code: value.officeUsageRestrictionCode,
    musical_instrument_restriction: value.musicalInstrumentRestriction,
    musical_instrument_restriction_code: value.musicalInstrumentRestrictionCode,
    restaurant_usage_restriction_code: value.restaurantUsageRestrictionCode,
    room_sharing_restriction_code: value.roomSharingRestrictionCode,
    foreigner_restriction_code: value.foreignerRestrictionCode,
    friends_restriction_code: value.friendsRestrictionCode,
    foreign_student_restriction_code: value.foreignStudentRestrictionCode,
    deposit_for_student_code: value.depositForStudentCode,
    dwelling_unit_use_code: value.dwellingUnitUseCode,
    room_count: value.roomCount,
    layout_type_code: value.layoutTypeCode,
    orientation_code: value.orientationCode,
    floor_number: value.floorNumber,
    exclusive_area: AreaWithMeasurementMethodToJSON(value.exclusiveArea),
    available_code: value.availableCode,
    available_datejun: DateJunToJSON(value.availableDatejun),
    departure_date:
      value.departureDate === undefined
        ? undefined
        : value.departureDate.toISOString().substr(0, 10),
    sales_point: value.salesPoint,
    message_to_other_company: value.messageToOtherCompany,
    original_property_code_text: value.originalPropertyCodeText,
    advertise_flag: value.advertiseFlag,
    company_remark: value.companyRemark,
    advertising_fee: PriceWithUnitToJSON(value.advertisingFee),
    advertising_fee_update_date:
      value.advertisingFeeUpdateDate === undefined
        ? undefined
        : value.advertisingFeeUpdateDate.toISOString(),
    customer_key: value.customerKey,
    agent_guid: value.agentGuid,
    staff_guid: value.staffGuid,
    transportation: (value.transportation as Array<any>).map(
      TransportationToJSON
    ),
    parking_availability_code: value.parkingAvailabilityCode,
    has_bike_parking: value.hasBikeParking,
    has_motorbike_parking: value.hasMotorbikeParking,
    parking_price_range: IntRangeToJSON(value.parkingPriceRange),
    b2b_custom_flag: value.b2bCustomFlag,
    b2b_free_comment: value.b2bFreeComment,
    b2b_remark: value.b2bRemark,
    search_area: value.searchArea,
    pickup_feature: RentPickupFeatureToJSON(value.pickupFeature),
    building_preview: BuildingPreviewToJSON(value.buildingPreview),
  };
}
